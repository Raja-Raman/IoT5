/*  
Make a call to your mobile phone through IFTTT
    WeMos D1 Arduino compatible ESP8266 Wifi Board from Banggood.com
    My IFTTT key is: BG818f5FMd7gGzli1r0B5
    curl -X POST -H "Content-Type: application/json" --data @payload.json https://maker.ifttt.com/trigger/Hook_to_ring/with/key/BG818f5FMd7gGzli1r0B5
    payload.json file content: {"value1":100}    
 */
 
#include <ESP8266WiFi.h>

// Replace with your SSID and Password
const char* ssid     = "<ssid>";
const char* password = "<pwd>";

 // IFTTT Maker web hooks server 
const char* server = "maker.ifttt.com";   // Note: https:// is omitted

// Your URL resource, containing the path and key for your app
const char* resource = "/trigger/Hook_to_ring/with/key/<your_key>";

void setup() {
  Serial.begin(9600);
  Serial.println("\n\nIFTTT client starting...");
  Serial.println("Expect a ring on your mobile phone through the IFTTT app");
  initWifi();
  Serial.println ("\n\nEnter a number:");  
}

void loop() {
    if (Serial.available()) {
        readData();
        makeHTTPRequest();
        Serial.println ("\n\nEnter a number:");         
    }
}

// Establish a Wi-Fi connection with your router
void initWifi() {
  Serial.print("Connecting to: "); 
  Serial.print(ssid);
  WiFi.begin(ssid, password);  

  int timeout = 10 * 4; // 10 seconds
  while(WiFi.status() != WL_CONNECTED  && (timeout-- > 0)) {
    delay(250);
    Serial.print(".");
  }
  Serial.println("");

  if(WiFi.status() != WL_CONNECTED) {
     Serial.println("Failed to connect to WiFi.");
  }
  else {
    Serial.print("WiFi connected in: "); 
    Serial.print(millis());
    Serial.print(" mSec, IP address: "); 
    Serial.println(WiFi.localIP());
  }
}

int parameter = 10;
void readData() {
   parameter = Serial.parseInt();
   Serial.println(String("Sending parameter: ") +parameter);
}

// Make an HTTP request to Thing Speak
void makeHTTPRequest() {
  Serial.print("Connecting to "); 
  Serial.print(server);
  
  WiFiClient client;
  int retries = 5;
  while(!!!client.connect(server, 80) && (retries-- > 0)) {
    Serial.print(".");
  }
  Serial.println();
  if(!!!client.connected()) {
     Serial.println("Failed to connect, going back to sleep");
  }
  
  Serial.print("Request resource: "); 
  Serial.println(resource);

  String payload = String("{\"value1\":\"") + parameter + "\"}";
                        
  client.println (String("POST ") + resource + " HTTP/1.1");
  client.println(String("Host: ") + server); 
  client.println("Connection: close\r\nContent-Type: application/json");
  client.print("Content-Length: ");
  client.println(payload.length());
  client.println();
  client.println(payload);
                  
  int timeout = 5 * 10; // 5 seconds             
  while(!!!client.available() && (timeout-- > 0)){
    delay(100);
  }
  if(!!!client.available()) {
     Serial.println("No response, try again.");
  }
  while(client.available()){
    Serial.write(client.read());
  }
  
  Serial.println("\nclosing connection");
  client.stop();
}
